#!/bin/sh

# Copyright (C) 2013  Taylan Ulrich Bayırlı/Kammer

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Commentary:

# This script generates GIF from videos using MPlayer and ImageMagick.  Usage
# information is embedded in the code below.

# Code:

Help()
{
    printf %s "\
Usage: video2gif <videofile> <startposition> <duration>

Environment variables:

- VIDEO2GIF_SCALE: Percentile scaling of output.  Default 40.

- VIDEO2GIF_FRAMESTEP: Use every nth frame of the source video, where this is n.
  Default is 3, meaning 2/3 of frames are discarded.  Cuts down file size but
  result is usually fine; set to 1 to preserve all frames.

- VIDEO2GIF_DELAY: Inter-frame delay in 10ms units.  Default is ImageMagick
  default.  (See -delay switch of ImageMagick.)

FRAMESTEP and DELAY have to correspond to preserve the FPS of the source
material.  The defaults will preserve ~24 FPS.

- VIDEO2GIF_FUZZ: Percentile fuzzy color selection for GIF optimization.  See
  -fuzz switch of ImageMagick for details.  Default is 3.

- VIDEO2GIF_PNGZ: Compression of temporary PNGs, max 9.  Default 6.
"
}

case $1 in (-h | --help | '-?')
        Help; exit
esac

case $# in
    (3) ;;
    (*) Help; exit 1
esac

file=$1
start=$2
endpos=$3

tmpdir=${TMPDIR:-/tmp}/video2gif$$
mkdir "$tmpdir" || exit
chmod 700 "$tmpdir" || exit
trap 'rm -rf -- "$tmpdir"; exit 1' INT TERM
trap 'rm -rf -- "$tmpdir"' EXIT

case $file in
    (/*) absfile=file ;;
    (*)
        oldIFS=$IFS
        IFS=
        absfile=$(pwd)/$file
        IFS=$oldIFS
esac
outfile=$file-$start+$endpos.gif
absoutfile=$absfile-$start+$endpos.gif

cd "$tmpdir"

step=${VIDEO2GIF_FRAMESTEP:-3}
echo "Extracting PNGs with MPlayer, using 1/$step of original FPS ..."
mplayer "$absfile" -ss "$start" -endpos "$endpos" \
    -ao null -vf framestep="$step" -vo png:z="${VIDEO2GIF_PNGZ:-6}" \
    || exit

scale=${VIDEO2GIF_SCALE:-40}
echo "Scaling PNGs to $scale% ..."
i=0; for png in *.png; do i=$(($i+1)); done
printf 'Remaining: '
for png in *.png
do
    printf '%s ' $i; i=$(($i-1))
    convert "$png" -scale "$scale"% "$png" || exit
done
echo
unset i

delay=${VIDEO2GIF_DELAY:+-delay "$VIDEO2GIF_DELAY"}
fuzz=${VIDEO2GIF_FUZZ:-3}
echo "Generating the GIF ..."
convert $delay -fuzz "$fuzz"% *.png -layers Optimize "$absoutfile" || exit

echo "DONE: $outfile"

# video2gif ends here
